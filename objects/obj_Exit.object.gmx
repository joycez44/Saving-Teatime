<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_FloatMotion</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rm = rm_Level1

distance = 4
direct = 1

move = true

completed = false

alpha = 0;
screen_size = 0.8
incr = .01
incr_maxed = false

best_time = 0
best_star = 0
money_earned = 0

drawing_screen = true

depth = 100


scr = instance_create(view_wview[0]/2, view_hview[0]/2, obj_Results)
scr.depth = -10
scr.image_xscale = screen_size
scr.image_yscale = screen_size
scr.visible = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (incr_maxed = false) {
    if (screen_size &gt; 1.1) {
        show_debug_message("blargh")
        incr_maxed = true
        incr = -.01
    }
    
    screen_size += incr
    
    scr.image_xscale = screen_size
    scr.image_yscale = screen_size
    
    alarm[0] = 1
}
else if (incr_maxed &amp;&amp; screen_size != 1.0) {
    screen_size += incr
    
    scr.image_xscale = screen_size
    scr.image_yscale = screen_size
    
    alarm[0] = 1
}
else  {
    drawing_screen = false
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!completed) {
    pause_game();
    ini_open("teatime.ini");
    
    money_earned = round(obj_LevelCtrl.base_money / obj_LevelCtrl.timer)
    show_debug_message(money_earned)
    global.money += money_earned
    ini_write_real("upgrades", "money", global.money);
    
    best_time = ini_read_real("level" + string(obj_LevelCtrl.num), "time", 0);
    best_star = ini_read_real("level" + string(obj_LevelCtrl.num), "star", 0);
    
    time = real(obj_LevelCtrl.display_time)
    
    if (best_time == 0 || time &lt; best_time) {
        ini_write_real("level" + string(obj_LevelCtrl.num), "time", time);
    }
    if (obj_LevelCtrl.star_collected) {
        if (best_star == 0 || time &lt; best_star) {
            ini_write_real("level" + string(obj_LevelCtrl.num), "star", time);
        }
    }

    completed = true
    scr.visible = true
    scr.x = view_xview[0] + view_wview[0]/2
    scr.y = view_yview[0] + view_hview[0]/2  
    alarm[0] = 1
    drawing_screen = true
    
    with (other) {
        part_emitter_region(sparkles,emitter2,x,x,y,y,0,0);
        part_emitter_burst(sparkles,emitter2,particle2,16);
    
    }
        
    audio_play_sound("sfx_Exit", 10, false);
    ini_close(); 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha)

draw_rectangle(0, 0, room_width, room_height, c_black)

draw_set_alpha(1.0)

if (!drawing_screen) {
    //print results
    
    scr.x = view_xview + view_wview[0]/2
    scr.y = view_yview + view_hview[0]/2
    
    draw_set_font(fnt_MenuText_S)
    draw_set_color(c_white)
    
    draw_text(330, 200, "Time:")  
    draw_text(350, 250, string(obj_LevelCtrl.display_time))
    
    draw_text(330, 300, "Sugar:")
    draw_text(350, 350, string(money_earned))
    
    
    if (best_time == 0 || time &lt; best_time) {
        best_time = time
        //draw star next to time
        //star does a rotate/scale anim first
    }
    draw_text(510, 200, "Best Time:")
    draw_text(580, 250, best_time)
    
    if (obj_LevelCtrl.star_collected &amp;&amp; (best_star == 0 ||time &lt; best_star)) {
        best_star = time
        //draw star next to time
    }
    draw_text(510, 300, "Best Star:")
    draw_text(580, 350, best_star)
    
    draw_set_halign(fa_center)
    draw_text_ext(515, 450, "Press SPACE to return.", 60, 400)
    draw_set_halign(fa_left)
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (completed) {
    unpause_game();
    room_goto(rm_Map)
    audio_stop_sound(bgm_Level)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
